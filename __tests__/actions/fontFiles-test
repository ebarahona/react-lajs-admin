'use strict';

import * as F from '../../client/src/actionTypes/fontFiles';
import * as FF from '../../client/src/actions/fontFiles';

describe('Font File Actions', () => {
  test('should create an action to fetch font files', () => {
    const expectedAction = {
      type: F.FETCH_FONT_FILES
    };
    expect(FF.fetchFontFiles()).toEqual(expectedAction);
  });

  test('should create an action to fetch font files number', () => {
    const expectedAction = {
      type: F.FETCH_FONT_FILES_NUMBER
    };
    expect(FF.fetchFontFilesNumber()).toEqual(expectedAction);
  });

  test('should create an action to create a font file', () => {
    const fontFile = {fontFamily: 'someName', src: 'src', fontWeight: 'someFontWeight', fontStyle: 'someFontStyle'};
    const expectedAction = {
      type: F.CREATE_FONT_FILE,
      fontFile
    };
    expect(FF.createFontFile(fontFile)).toEqual(expectedAction);
  });

  test('should create an action to upload a woff file', () => {
    const fileWoff = "fontFile";
    const expectedAction = {
      type: F.UPLOAD_FONT_FILE,
      fileWoff
    };
    expect(FF.uploadFontFile(fileWoff)).toEqual(expectedAction);
  });

  test('should create an action to edit a font file', () => {
    const id = 15;
    const fontFile = {fontFamily: 'someName', src: 'src', fontWeight: 'someFontWeight', fontStyle: 'someFontStyle'};
    const expectedAction = {
      type: F.EDIT_FONT_FILE,
      id,
      newFontFile: fontFile
    };
    expect(FF.editFontFile(id, fontFile)).toEqual(expectedAction);
  });

  test('should create an action to delete a font file', () => {
    const id = 15;
    const expectedAction = {
      type: F.DELETE_FONT_FILE,
      id
    };
    expect(FF.deleteFontFile(id)).toEqual(expectedAction);
  });
});
